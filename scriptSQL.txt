DROP DATABASE db_laika;
CREATE DATABASE db_laika;

-- Use the database
USE db_laika;

-- Create tbl_endereco
CREATE TABLE tbl_endereco (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    rua VARCHAR(100) NOT NULL,
    bairro VARCHAR(50) NOT NULL,
    cidade VARCHAR(50) NOT NULL,
    estado CHAR(2) NOT NULL,
    complemento VARCHAR(100)
);


-- Create tbl_clientes
CREATE TABLE tbl_clientes (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(15),
    email VARCHAR(100) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    img VARCHAR(100),
	endereco_id INT,
    FOREIGN KEY (endereco_id) REFERENCES tbl_endereco(id)
);

-- Create tbl_produtos
CREATE TABLE tbl_produtos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10, 2) NOT NULL,
    img VARCHAR(100),
    quantidade_estoque INT NOT NULL
);

SELECT * FROM tbl_produtos;

-- Create tbl_avaliacoes
CREATE TABLE tbl_avaliacoes (
	id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nota INT NOT NULL,
    comentario TEXT,
    data_avaliacao DATETIME NOT NULL,
	cliente_id INT NOT NULL,
    produto_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES tbl_clientes(id),
    FOREIGN KEY (produto_id) REFERENCES tbl_produtos(id)
);

-- Create tbl_fornecedores
CREATE TABLE tbl_fornecedores (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(15),
    email VARCHAR(100),
    endereco_id INT,
    FOREIGN KEY (endereco_id) REFERENCES tbl_endereco(id)
);

-- Create tbl_produtos_fornecedores
CREATE TABLE tbl_produtos_fornecedores(
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    produto_id INT NOT NULL,
    fornecedor_id INT NOT NULL,
    FOREIGN KEY (produto_id) REFERENCES tbl_produtos(id),
    FOREIGN KEY (fornecedor_id) REFERENCES tbl_fornecedores(id)
);

-- Create tbl_categorias
CREATE TABLE tbl_categorias (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_categorias_produtos
CREATE TABLE tbl_categorias_produtos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    produto_id INT NOT NULL,
    categoria_id INT NOT NULL,
    FOREIGN KEY (produto_id) REFERENCES tbl_produtos(id),
    FOREIGN KEY (categoria_id) REFERENCES tbl_categorias(id)
);

-- Create tbl_pedido_status
CREATE TABLE tbl_pedido_status (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_pedidos
CREATE TABLE tbl_pedidos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    data_pedido DATETIME NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
	cliente_id INT NOT NULL,
	pedido_status_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES tbl_clientes(id),
    FOREIGN KEY (pedido_status_id) REFERENCES tbl_pedido_status(id)
);

-- Create tbl_itens_pedido
CREATE TABLE tbl_itens_pedido (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10, 2) NOT NULL,
	pedido_id INT NOT NULL,
    produto_id INT NOT NULL,
    FOREIGN KEY (pedido_id) REFERENCES tbl_pedidos(id),
    FOREIGN KEY (produto_id) REFERENCES tbl_produtos(id)
);

-- Create tbl_pagamentos
-- A RESOLVER ----------------------------------------------------------------------------------
CREATE TABLE tbl_pagamentos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    metodo_pagamento VARCHAR(50),
    data_pagamento DATE,
    valor DECIMAL(10, 2),
	pedido_id INT,
    FOREIGN KEY (pedido_id) REFERENCES tbl_pedidos(id)
);
-----------------------------------------------------------------------------------------------
-- Create tbl_animal_raca
CREATE TABLE tbl_animal_raca (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_animal_tipo
CREATE TABLE tbl_animal_tipo (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_animal_porte
CREATE TABLE tbl_animal_porte (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_animais
CREATE TABLE tbl_animais (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    nascimento DATE,
    peso DECIMAL(10, 2),
    img VARCHAR(100),
	cliente_id INT NOT NULL,
    tipo_id INT NOT NULL,
    porte_id INT NOT NULL,
	raca_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES tbl_clientes(id),
    FOREIGN KEY (tipo_id) REFERENCES tbl_animal_tipo(id),
    FOREIGN KEY (porte_id) REFERENCES tbl_animal_porte(id),
    FOREIGN KEY (raca_id) REFERENCES tbl_animal_raca(id)
);

-- Create tbl_agendamentos
CREATE TABLE tbl_agendamentos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    data_agendamento DATETIME NOT NULL,
	animal_id INT NOT NULL,
    FOREIGN KEY (animal_id) REFERENCES tbl_animais(id)
);

-- Create tbl_servicos
CREATE TABLE tbl_servicos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10, 2) NOT NULL
);

-- Create tbl_agendamentos_servicos
CREATE TABLE tbl_agendamentos_servicos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    agendamento_id INT NOT NULL,
    servico_id INT NOT NULL,
    FOREIGN KEY (agendamento_id) REFERENCES tbl_agendamentos(id),
    FOREIGN KEY (servico_id) REFERENCES tbl_servicos(id)
);

-- Create tbl_especialidades
CREATE TABLE tbl_cargos (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(50) NOT NULL
);

-- Create tbl_profissionais
CREATE TABLE tbl_funcionarios (
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(15),
    email VARCHAR(100),
	senha VARCHAR(100),
	endereco_id INT,
    FOREIGN KEY (endereco_id) REFERENCES tbl_endereco(id)
);

CREATE TABLE tbl_cargos_funcionarios (
id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
cargo_id INT NOT NULL,
funcionario_id INT NOT NULL,
FOREIGN KEY (cargo_id) REFERENCES tbl_cargos(id),
FOREIGN KEY (funcionario_id) REFERENCES tbl_funcionarios(id)
);

-- Create tbl_agendamento_profissionais
CREATE TABLE tbl_agendamento_funcionarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    funcionario_id INT NOT NULL,
    agendamento_id INT NOT NULL,
    FOREIGN KEY (funcionario_id) REFERENCES tbl_funcionarios(id),
    FOREIGN KEY (agendamento_id) REFERENCES tbl_agendamentos(id)
);


show tables;
INSERT INTO tbl_endereco (rua, bairro, cidade, estado, complemento) VALUES 
('Rua Exemplo', 'Bairro Exemplo', 'Cidade Exemplo', 'EX', 'Complemento Exemplo')
;

-- Obter o ID do endereço recém-adicionado
SET @endereco_id = LAST_INSERT_ID();
select @endereco_id;
show tables;
-- Inserir um cliente usando o ID do endereço
INSERT INTO tbl_clientes (nome, telefone, email, senha, endereco_id, img) VALUES 
('Nome do Cliente', '1234567890', 'cliente@exemplo.com', 'senha_hash', @endereco_id, 'imagem.jpg')
;
INSERT INTO tbl_funcionarios (nome, telefone, email, senha, endereco_id) VALUES 
('Nome do Funcionário', '1234567890', 'funcionário@exemplo.com', 'senha_hash', @endereco_id)
;


SELECT cast(LAST_INSERT_ID() AS DECIMAL) AS id FROM TBL_ENDERECO LIMIT 1;